CC = arm-eabi-gcc
OBJCOPY = arm-eabi-objcopy
OBJDUMP = arm-eabi-objdump

CFLAGS = -c -O3 -fPIC -Iinclude \
         -g -nostdlib -gdwarf -Wno-unused-but-set-variable -funroll-loops -fno-omit-frame-pointer \
         -fno-ipa-cp-clone -fno-ipa-cp -fno-common -fno-builtin -ffreestanding -fno-stack-protector -Wall -Wno-format-security \
         -Wno-format-nonliteral -Wno-return-local-addr -Wno-int-to-pointer-cast -march=armv7-a
         
CFLAGS_LD = -N -Wl,--build-id=none -fPIC -fPIE -flto -g -Winline -lgcc -gdwarf -O3 -Wno-unused-but-set-variable -Wno-return-local-addr -fno-ipa-cp-clone \
            -fno-ipa-cp -nostartfiles -nodefaultlibs -march=armv7-a

DEPS = include/common.h include/md5.h
OBJ = bin/aarch32/obj/entry.o bin/aarch32/obj/main.o bin/aarch32/obj/md5.o bin/aarch32/obj/otp.o bin/aarch32/obj/utils.o

all: bin/aarch32/bl1.bin

bin/aarch32/obj/entry.o: src/aarch32/entry.S
	@mkdir.exe -p bin/aarch32/obj
	$(CC) -c -o $@ src/aarch32/entry.S $(CFLAGS)

bin/aarch32/obj/%.o: src/%.c $(DEPS)
	@mkdir.exe -p bin/aarch32/obj
	$(CC) -c -o $@ $< $(CFLAGS)

bin/aarch32/bl1.elf: $(OBJ) src/aarch32/bl1.lds
	$(CC) -o $@ -Tsrc/aarch32/bl1.lds $(CFLAGS_LD) $(OBJ) -lgcc

bin/aarch32/bl1.bin: bin/aarch32/bl1.elf
	$(OBJCOPY) -O binary $< $@

.PHONY: clean
clean:
	rm -rf bin
	